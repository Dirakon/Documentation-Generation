["<explanation>\nService that continuously monitors a program's version, updates stored data, and generates an RSS feed of version history. It retrieves the current version from external sources, manages state in a storage file, and outputs updates in RSS format.\n</explanation>\n<doctest-code>\n[] > doctest\n  app > @\n    \"state_path\"\n</doctest-code>\n<doctest-stdin>\nRequest: branch\nunstable\nRequest: program-name\ntest\nRequest: get-version|||unstable|||test\n1.0\nRequest: read-file|||state_path/unstable/test\n(lines: 0)\n\nRequest: write-file|||state_path/unstable/test\n1.0|||0\n\n</doctest-stdin>\n<doctest-output>\nRss:\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<rss version=\"2.0\">\n\n<channel>\n  <title>test versions</title>\n  <link>https://search.nixos.org/packages?channel=unstable&amp;from=0&amp;size=50&amp;sort=relevance&amp;type=packages&amp;query=test</link>\n  <description>History of versions</description>\n  <item>\n    <title>1.0</title>\n    <link>https://search.nixos.org/packages?channel=unstable&amp;from=0&amp;size=50&amp;sort=relevance&amp;type=packages&amp;query=test</link>\n    <description>New version at 0</description>\n  </item>\n</channel>\n\n</rss>\n</doctest-output>","<explanation>\nManages storage and retrieval of program version data in files, handling serialization and deserialization of version entries with timestamps.\n</explanation>\n<doctest-code>\n[] > doctest\n  QQ.io.stdout > @\n    QQ.txt.sprintf\n      \"%d\"\n      *\n        (program-data-storage \"/state\").read \"test-branch\" \"demo\".versions.length\n</doctest-code>\n<doctest-stdin>\n</doctest-stdin>\n<doctest-output>\n0\n</doctest-output>","<explanation>\nRepresents program version data and manages generating RSS output and updating versions. It includes methods to output data as an RSS feed and to update the stored versions with new entries.\n</explanation>\n<doctest-code>\n[] > doctest\n  program-data > pd\n    \"stable\"\n    \"myapp\"\n    *\n      program-version \"1.0\" 12345\n      program-version \"1.1\" 12346\n  pd.output-as-rss > @\n</doctest-code>\n<doctest-stdin>\n</doctest-stdin>\n<doctest-output>\nRss:\n(lines: 20)\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<rss version=\"2.0\">\n\n<channel>\n  <title>myapp versions</title>\n  <link>https://search.nixos.org/packages?channel=stable&from=0&size=50&sort=relevance&type=packages&query=myapp</link>\n  <description>History of versions</description>\n  <item>\n    <title>1.0</title>\n    <link>https://search.nixos.org/packages?channel=stable&from=0&size=50&sort=relevance&type=packages&query=myapp</link>\n    <description>New version at 12345</description>\n  </item>\n  <item>\n    <title>1.1</title>\n    <link>https://search.nixos.org/packages?channel=stable&from=0&size=50&sort=relevance&type=packages&query=myapp</link>\n    <description>New version at 12346</description>\n  </item>\n</channel>\n\n</rss>\n</doctest-output>","<explanation>\nUpdates the program data with a new version if it's not already the latest entry, preventing duplicate consecutive versions.\n</explanation>\n<doctest-code>\n[] > doctest\n  program-data > pd\n    \"main\"\n    \"test-app\"\n    *\n      list\n        program-version \"1.0\" 123\n  pd.actualized (program-version \"1.1\" 456) > updated\n  updated.output-as-rss > @\n</doctest-code>\n<doctest-stdin>\n</doctest-stdin>\n<doctest-output>\nRss:\n(lines: 20)\n<?xml version=\"1.0\" encoding=\"UTF-8\" ?>\n<rss version=\"2.0\">\n\n<channel>\n  <title>test-app versions</title>\n  <link>https://search.nixos.org/packages?channel=main&from=0&size=50&sort=relevance&type=packages&query=test-app</link>\n  <description>History of versions</description>\n  <item>\n    <title>1.0</title>\n    <link>https://search.nixos.org/packages?channel=main&from=0&size=50&sort=relevance&type=packages&query=test-app</link>\n    <description>New version at 123</description>\n  </item>\n  <item>\n    <title>1.1</title>\n    <link>https://search.nixos.org/packages?channel=main&from=0&size=50&sort=relevance&type=packages&query=test-app</link>\n    <description>New version at 456</description>\n  </item>\n</channel>\n\n</rss>\n</doctest-output>","<explanation>\nRepresents a program version with a version number and a timestamp.\n</explanation>\n<doctest-code>\n[] > doctest\n  QQ.io.stdout > @\n    program-version\n      \"1.2.3\"\n      1620000000\n</doctest-code>\n<doctest-stdin>\n</doctest-stdin>\n<doctest-output>\n1.2.3\n</doctest-output>","<explanation>\nFacade for external system interactions, handling IO, command execution, and data retrieval through predefined protocols.\n</explanation>\n<doctest-code>\n[] > doctest\n  external.log \"Sample log entry\" > @\n</doctest-code>\n<doctest-stdin>\n</doctest-stdin>\n<doctest-output>\nLog:\n(lines: 1)\nSample log entry\n</doctest-output>"]